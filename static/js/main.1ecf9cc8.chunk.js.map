{"version":3,"sources":["components/FeedBack.module.css","components/FeedbackOptions.jsx","components/Statistic.jsx","components/Notification.jsx","components/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","addBad","addNeutral","addGood","className","style","button","type","onClick","Statistic","good","neutral","bad","total","positivePercentage","title","resultString","Notification","message","Section","App","countTotalFeedback","useRef","countPositiveFeedbackPercentage","useState","setGood","setNeutral","setBad","useEffect","current","Math","round","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,OAAS,yBAAyB,aAAe,iC,kKCGpF,SAASC,EAAT,GAAwD,IAA9BC,EAA6B,EAA7BA,OAAOC,EAAsB,EAAtBA,WAAWC,EAAW,EAAXA,QACnD,OAAO,qCACC,wBAAQC,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAxD,kBACA,wBAAQC,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASN,EAAxD,qBACA,wBAAQE,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASP,EAAxD,oBCJD,SAASQ,EAAT,GAAuE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAE3D,OAAO,qCACH,qBAAKV,UAAWC,IAAMU,MAAtB,uBACA,sBAAKX,UAAWC,IAAMW,aAAtB,kBAA0CN,KAC1C,sBAAKN,UAAWC,IAAMW,aAAtB,qBAA6CL,KAC7C,sBAAKP,UAAWC,IAAMW,aAAtB,iBAAyCJ,KACzC,sBAAKR,UAAWC,IAAMW,aAAtB,mBAA2CH,KAC3C,sBAAKT,UAAWC,IAAMW,aAAtB,sBAA8CF,GAA0C,QCRjF,SAASG,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACpC,OAAO,qBAAKd,UAAWC,IAAMW,aAAtB,SAAqCE,ICE/B,SAASC,EAAT,GAAuG,IAApFJ,EAAmF,EAAnFA,MAAQL,EAA2E,EAA3EA,KAAMC,EAAqE,EAArEA,QAASC,EAA4D,EAA5DA,IAAKC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,mBAAmBX,EAA6B,EAA7BA,QAAQD,EAAqB,EAArBA,WAAWD,EAAU,EAAVA,OACvG,OAAO,qCACH,oBAAIG,UAAWC,IAAMU,MAArB,SAA6BA,IAC7B,cAACf,EAAD,CACIC,OAAQA,EACRC,WAAYA,EACZC,QAASA,IAEXO,GAAQC,GAAWC,EAChB,cAACH,EAAD,CACGC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACvB,cAACG,EAAD,CAAcC,QAAQ,yBClBpB,SAASE,IACtB,IAAIC,EAAqBC,iBAAO,GAC5BC,EAAkCD,iBAAO,GAE7C,EAAwBE,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAoBA,OARAC,qBAAU,WACRP,EAAmBQ,QAAUnB,EAAOC,EAAUC,EAC9CW,EAAgCM,QAAUC,KAAKC,MAC5CrB,EAAOW,EAAmBQ,QAAW,QAMxC,mCACE,cAACV,EAAD,CACEJ,MAAO,wBACPZ,QAtBU,WACdsB,GAAQ,SAAAO,GAAI,OAAIA,EAAO,MAsBnB9B,WApBa,WACjBwB,GAAW,SAAAM,GAAI,OAAIA,EAAO,MAoBtB/B,OAlBS,WACb0B,GAAO,SAAAK,GAAI,OAAIA,EAAO,MAkBlBtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,EAAmBQ,QAC1Bf,mBAAoBS,EAAgCM,YCpC5DI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1ecf9cc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FeedBack_title__M34le\",\"button\":\"FeedBack_button__2qvzO\",\"resultString\":\"FeedBack_resultString__3d-fA\"};","import style from \"./FeedBack.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({addBad,addNeutral,addGood }) {\r\n        return <>\r\n                <button className={style.button} type=\"button\" onClick={addGood}>Good</button>\r\n                <button className={style.button} type=\"button\" onClick={addNeutral}>Neutral</button>\r\n                <button className={style.button} type=\"button\" onClick={addBad}>Bad</button>\r\n        </>;\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n        addBad: PropTypes.func.isRequired,\r\n        addNeutral: PropTypes.func.isRequired,\r\n        addGood: PropTypes.func.isRequired,\r\n      \r\n};","import style from \"./FeedBack.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Statistic({ good, neutral, bad, total, positivePercentage }) {\r\n    \r\n    return <>\r\n        <div className={style.title}>Statistic</div>\r\n        <div className={style.resultString}>Good:{good}</div>\r\n        <div className={style.resultString}>Neutral:{neutral}</div>\r\n        <div className={style.resultString}>Bad:{bad}</div>\r\n        <div className={style.resultString}>Total:{total}</div>\r\n        <div className={style.resultString}>Positive:{positivePercentage ? positivePercentage : 0}</div>\r\n    </>;\r\n}\r\n\r\n\r\nStatistic.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};","import style from \"./FeedBack.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({message}) {\r\n  return <div className={style.resultString}>{message}</div>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\n","import React from \"react\";\r\nimport style from \"./FeedBack.module.css\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistic\";\r\nimport Notification from \"./Notification\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Section({ title,  good, neutral, bad, total, positivePercentage,addGood,addNeutral,addBad }) {\r\n    return <>\r\n        <h2 className={style.title}>{title}</h2>\r\n        <FeedbackOptions\r\n            addBad={addBad}\r\n            addNeutral={addNeutral}\r\n            addGood={addGood}\r\n        />\r\n        {(good || neutral || bad) ?\r\n            (<Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={total}\r\n                positivePercentage={positivePercentage} />) :\r\n            (<Notification message=\"No feedback given\" />)\r\n        }\r\n    </>;\r\n\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    \r\n};","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Section from './components/Section';\n\nexport default function App() {\n  let countTotalFeedback = useRef(0);\n  let countPositiveFeedbackPercentage = useRef(0);\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addGood = () => {\n    setGood(prev => prev + 1);\n  };\n  const addNeutral = () => {\n    setNeutral(prev => prev + 1);\n  };\n  const addBad = () => {\n    setBad(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    countTotalFeedback.current = good + neutral + bad;\n    countPositiveFeedbackPercentage.current = Math.round(\n      (good / countTotalFeedback.current) * 100,\n    );\n  });\n\n\n  return (\n    <>\n      <Section\n        title={'Please leave feedback'}\n        addGood={addGood}\n        addNeutral={addNeutral}\n        addBad={addBad}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback.current}\n        positivePercentage={countPositiveFeedbackPercentage.current}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}